@model StormEkspress.Models.UIModel.HomePageDto
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var breadcrumbJson = ViewData["BreadcrumbJson"] as string;
    var pageTitle = ViewData["Title"] as string;
    var breadcrumbs = ViewData["Breadcrumbs"] as List<Breadcrumb>;
}
<!-- Page Header Start -->
<div class="container-fluid page-header py-5" style="margin-bottom: 6rem;">
    <div class="container py-5">
        <h1 class="display-3 text-white mb-3 animated slideInDown">@ViewData["PageTitle"]</h1>
        <nav aria-label="breadcrumb animated slideInDown">
            <ol class="breadcrumb">
                @foreach (var breadcrumb in breadcrumbs)
                {
                    @if (breadcrumb.IsActive)
                    {
                        <li class="breadcrumb-item active" aria-current="page">@breadcrumb.Text</li>
                    }
                    else
                    {
                        <li class="breadcrumb-item"><a href="@breadcrumb.Url">@breadcrumb.Text</a></li>
                    }
                }
            </ol>
        </nav>
    </div>
</div>
<!-- Page Header End -->
<!-- Mission Start -->
<div class="container-fluid overflow-hidden  px-lg-0">
    <div class="container about  px-lg-0">
        <div class="row g-5 mx-lg-0">
            <div class="col-lg-6 ps-lg-0 wow fadeInLeft" data-wow-delay="0.1s" style="min-height: 400px;">
                <div class="position-relative h-100">
                    <img class="position-absolute img-fluid w-100 h-100" src=@Model.About.MissionImageUrl style="object-fit: contain;" alt=@Model.About.MissionImageAlt>
                </div>
            </div>
            <div class="col-lg-6 about-text wow fadeInUp" data-wow-delay="0.3s">
                <h6 class="text-secondary text-uppercase mb-3">@ViewData["Title"]</h6>
                <h1 class="mb-5">@Model.About.Mission</h1>
                <p class="mb-5">@Html.Raw(Model.About.MissionText)</p>
            </div>
        </div>
    </div>
</div>
<!-- Mission End -->
<!-- Vision Start -->
<div class="container-fluid overflow-hidden  px-lg-0">
    <div class="container feature px-lg-0">
        <div class="row g-5 mx-lg-0">
            <div class="col-lg-6 feature-text wow fadeInUp" data-wow-delay="0.1s">
                <h6 class="text-secondary text-uppercase mb-3">@ViewData["Title"]</h6>
                <h1 class="mb-5">@Model.About.Vision</h1>
                <p class="mb-5">@Html.Raw(Model.About.VisionText)</p>
            </div>
            <div class="col-lg-6 pe-lg-0 wow fadeInRight" data-wow-delay="0.1s" style="min-height: 400px;">
                <div class="position-relative h-100">
                    <img class="position-absolute img-fluid w-100 h-100" src=@Model.About.VisionImageUrl style="object-fit: contain;" alt=@Model.About.VisionImageAlt>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Vision End -->
<!-- Fact Start -->
<div class="container-xxl py-5">
    <div class="container py-5">
        <div class="row g-5">
            <div class="col-lg-6">
                <div class="row g-4 align-items-center">
                    <!-- İlk div içinde 2 öğe -->
                    <div class="col-sm-6">
                        @foreach (var stat in Model.Statistics.Take(2))
                        {
                            <div class="@stat.BgColor p-4 mb-4 wow fadeIn" data-wow-delay="@($"{stat.Delay}s")">
                                <i class="fa @stat.Icon fa-2x text-white mb-3"></i>
                                <h2 class="text-white mb-2" data-toggle="counter-up">
                                    @stat.Value
                                </h2>
                                <p class="text-white mb-0">@stat.Title</p>
                            </div>
                        }
                    </div>

                    <!-- İkinci div içinde tek öğe -->
                    <div class="col-sm-6">
                        @foreach (var stat in Model.Statistics.Skip(2).Take(1))
                        {
                            <div class="@stat.BgColor p-4 mb-4 wow fadeIn" data-wow-delay="@($"{stat.Delay}s")">
                                <i class="fa @stat.Icon fa-2x text-white mb-3"></i>
                                <h2 class="text-white mb-2" data-toggle="counter-up">@stat.Value</h2>
                                <p class="text-white mb-0">@stat.Title</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-lg-6 wow fadeInUp" data-wow-delay="0.1s">
                <h6 class="text-secondary text-uppercase mb-3">@Model.About.WhyUs</h6>
                <h1 class="mb-5">Müşteri Odaklı Çözümler</h1>
                <p class="mb-5">@Model.About.WhyUsText</p>
            </div>
        </div>
    </div>
</div>
<!-- Fact End -->
<!-- Team Start -->
<div class="container-xxl py-5">
    <div class="container py-5">
        <div class="text-center wow fadeInUp" data-wow-delay="0.1s">
            <h6 class="text-secondary text-uppercase mb-3">Takımımız</h6>
            <h1 class="mb-5">Kuryelerimiz</h1>
        </div>
        <div class="row g-4">
            @foreach (var member in Model.TeamMembers)
            {
                <div class="col-lg-3 col-md-6 wow fadeInUp" data-wow-delay="@($"{0.3 + 0.2 * Model.TeamMembers.IndexOf(member)}s")">
                    <div class="team-item p-4">
                        <div class="overflow-hidden mb-4">
                            <img class="img-fluid" src="@member.ImageUrl" alt="@member.ImageAlt" width="928" height="491">
                        </div>
                        <h5 class="mb-0">@member.Name</h5>
                        <p>@member.Title</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<!-- Team End -->
@section Scripts {
    <script>
        // WOW.js Yeniden Başlatma
        document.addEventListener('DOMContentLoaded', function() {
            if(typeof WOW !== 'undefined') {
                new WOW({
                    offset: 100,
                    mobile: false
                }).init();
            }
        });
    </script>
}